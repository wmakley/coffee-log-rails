# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedPathHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedPathHelpersModule`.

module GeneratedPathHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def auth_email_verification_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_password_reset_request_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_signup_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def banned_ip_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def banned_ips_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def brew_method_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def brew_methods_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def coffee_brand_logo_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def coffee_brand_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def coffee_brands_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def coffee_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def coffee_photo_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def coffees_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_auth_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_brew_method_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_coffee_brand_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_coffee_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_log_entry_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_signup_code_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_group_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exceptions_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def log_entries_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def log_entry_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def log_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def logs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lookup_coffee_root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lookup_coffee_search_results_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lookup_coffee_select_coffee_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def my_account_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_auth_email_verification_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_auth_password_reset_request_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_auth_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_auth_signup_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_brew_method_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_coffee_brand_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_coffee_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_log_entry_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_signup_code_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_group_membership_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_group_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_health_check_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_code_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_codes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sort_coffees_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def success_auth_signup_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_group_membership_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_group_memberships_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_group_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_groups_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_path(*args); end
end
